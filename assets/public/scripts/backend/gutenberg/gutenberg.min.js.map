{"version":3,"file":"scripts/backend/gutenberg/gutenberg.min.js","mappings":"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","sources":["webpack://google-spreadsheet-to-wp-table-sync/webpack/bootstrap","webpack://google-spreadsheet-to-wp-table-sync/webpack/runtime/compat get default export","webpack://google-spreadsheet-to-wp-table-sync/webpack/runtime/define property getters","webpack://google-spreadsheet-to-wp-table-sync/webpack/runtime/hasOwnProperty shorthand","webpack://google-spreadsheet-to-wp-table-sync/external var \"React\"","webpack://google-spreadsheet-to-wp-table-sync/./assets/public/images/icon-guten.svg","webpack://google-spreadsheet-to-wp-table-sync/./assets/src/scripts/chunk/gutenberg/parts/helperFunctions.js","webpack://google-spreadsheet-to-wp-table-sync/./assets/src/scripts/chunk/gutenberg/editFucntion.js","webpack://google-spreadsheet-to-wp-table-sync/./assets/src/scripts/chunk/gutenberg/gutenberg-block.js","webpack://google-spreadsheet-to-wp-table-sync/./assets/src/scripts/chunk/gutenberg/logo.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = React;","var _path, _path2, _path3, _ellipse, _path4, _path5;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nvar SvgIconGuten = function SvgIconGuten(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 128 128\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, props), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M107.5 18H10v83.5h41.543a41.37 41.37 0 0 1-.277-4.794c0-22.514 18.167-40.766 40.578-40.766 5.55 0 10.838 1.12 15.656 3.145V18Z\",\n    fill: \"#fff\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6.5 17.059C6.5 8.466 13.434 1.5 21.987 1.5h73.824c8.554 0 15.488 6.966 15.488 15.559v15.559H6.499V17.059Z\",\n    fill: \"#30DF83\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6.5 17.059C6.5 8.466 13.434 1.5 21.987 1.5h4.13c8.554 0 15.488 6.966 15.488 15.559v15.559H6.5V17.059Z\",\n    fill: \"#00B871\"\n  })), _ellipse || (_ellipse = /*#__PURE__*/React.createElement(\"ellipse\", {\n    cx: 91.684,\n    cy: 96.546,\n    rx: 29.816,\n    ry: 29.954,\n    fill: \"#00B871\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M100.173 88.248a11.738 11.738 0 0 0-8.103-3.208c-5.463.005-10.18 3.768-11.482 8.988a.85.85 0 0 1-.821.648h-4.042a.849.849 0 0 1-.833-1.004c1.526-8.142 8.642-14.3 17.19-14.3 4.686 0 8.942 1.851 12.082 4.866l2.52-2.53c1.066-1.072 2.889-.313 2.889 1.202v9.499c0 .94-.758 1.7-1.693 1.7h-9.455c-1.508 0-2.263-1.831-1.197-2.902l2.945-2.959Zm-23.891 11.53h9.455c1.509 0 2.264 1.832 1.197 2.903l-2.944 2.959a11.736 11.736 0 0 0 8.102 3.208c5.46-.005 10.179-3.765 11.482-8.988a.85.85 0 0 1 .822-.648h4.042c.528 0 .93.482.832 1.004-1.526 8.142-8.641 14.301-17.189 14.301a17.39 17.39 0 0 1-12.083-4.867l-2.52 2.531c-1.066 1.071-2.889.312-2.889-1.203v-9.499c0-.939.758-1.7 1.693-1.7Z\",\n    fill: \"#fff\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M6.5 15.964C6.5 8.008 13.016 1.5 20.936 1.5h76.012c7.919 0 14.397 6.508 14.397 14.464v44.984a40.25 40.25 0 0 0-19.501-5.008c-4.588 0-8.997.765-13.11 2.175h-32.99v17.104h11.61a40.68 40.68 0 0 0-3.777 7.893h-7.833v15.825h5.581c.146 2.709.555 5.349 1.202 7.893H20.936c-7.92 0-14.436-6.547-14.436-14.503V15.964Zm31.388 42.15V75.22H14.357V58.115h23.53Zm0 24.998H14.357v9.215c0 3.716 2.88 6.61 6.579 6.61h16.952V83.111Zm65.6-32.89V33.069H45.744v17.153h57.744Zm-65.6 0V33.069H14.357v17.153h23.53ZM14.357 25.176h23.53V9.393H20.937c-3.699 0-6.58 2.855-6.58 6.57v9.213Zm31.387 0h57.744v-9.212c0-3.716-2.842-6.571-6.54-6.571H45.744v15.783Z\",\n    fill: \"#243665\"\n  })));\n};\n\nexport default SvgIconGuten;","var $ = jQuery.noConflict();\r\n\r\nexport function callAlert(title, description, type, time, pos = \"bottom-right\") {\r\n    suiAlert({\r\n        title: title,\r\n        description: description,\r\n        type: type,\r\n        time: time,\r\n        position: pos,\r\n    });\r\n}\r\n\r\nfunction suiAlert(options) {\r\n    if (options.type == \"info\") {\r\n        // announcement\r\n        options.icon = \"announcement\";\r\n    } else if (options.type == \"success\") {\r\n        // checkmark, checkmark box\r\n        options.icon = \"checkmark\";\r\n    } else if (options.type == \"error\") {\r\n        // ban, remove, remove circle\r\n        options.icon = \"remove\";\r\n    } else if (options.type == \"warning\") {\r\n        // warning sign, warning circle\r\n        options.icon = \"warning circle\";\r\n    }\r\n\r\n    // set close animation\r\n    var close_anim = \"drop\";\r\n    if (options.position == \"top-right\") {\r\n        close_anim = \"fly left\";\r\n    } else if (options.position == \"top-center\") {\r\n        close_anim = \"fly down\";\r\n    } else if (options.position == \"top-left\") {\r\n        close_anim = \"fly right\";\r\n    } else if (options.position == \"bottom-right\") {\r\n        close_anim = \"fly left\";\r\n    } else if (options.position == \"bottom-center\") {\r\n        close_anim = \"fly up\";\r\n    } else if (options.position == \"bottom-left\") {\r\n        close_anim = \"fly right\";\r\n    }\r\n\r\n    // screen size check\r\n    var alert_size = \"\";\r\n    var screen_width = $(window).width();\r\n    if (screen_width < 425) alert_size = \"mini\";\r\n\r\n    var alerts_class = \"ui-alerts.\" + options.position;\r\n    if (!$(\"body > .\" + alerts_class).length) {\r\n        $(\"body\").append('<div class=\"ui-alerts ' + options.position + '\"></div>');\r\n    }\r\n\r\n    var _alert = $(\r\n        '<div class=\"ui icon floating ' +\r\n            alert_size +\r\n            \" message \" +\r\n            options.type +\r\n            '\" id=\"alert\"> <i class=\"' +\r\n            options.icon +\r\n            ' icon\"></i> <i class=\"close icon\" id=\"alertclose\"></i> <div class=\"content\"> <div class=\"header\">' +\r\n            options.title +\r\n            \"</div> <p>\" +\r\n            options.description +\r\n            \"</p> </div> </div>\"\r\n    );\r\n    $(\".\" + alerts_class).prepend(_alert);\r\n\r\n    _alert.transition(\"pulse\");\r\n\r\n    /**\r\n     * Close the alert\r\n     */\r\n    $(\"#alertclose\").on(\"click\", function () {\r\n        $(this)\r\n            .closest(\"#alert\")\r\n            .transition({\r\n                animation: close_anim,\r\n                onComplete: function () {\r\n                    _alert.remove();\r\n                },\r\n            });\r\n    });\r\n\r\n    var timer = 0;\r\n    $(_alert)\r\n        .mouseenter(function () {\r\n            clearTimeout(timer);\r\n        })\r\n        .mouseleave(function () {\r\n            alertHide();\r\n        });\r\n\r\n    alertHide();\r\n\r\n    function alertHide() {\r\n        timer = setTimeout(function () {\r\n            _alert.transition({\r\n                animation: close_anim,\r\n                duration: \"2s\",\r\n                onComplete: function () {\r\n                    _alert.remove();\r\n                },\r\n            });\r\n        }, options.time * 1000);\r\n    }\r\n}\r\n\r\nexport function saveChanges(id, table_settings) {\r\n    $.ajax({\r\n        url: gswpts_gutenberg_block.admin_ajax,\r\n        data: {\r\n            action: 'swptls_save_from_guten_block',\r\n            nonce: window?.gswpts_gutenberg_block?.nonce,\r\n            id,\r\n            settings: JSON.stringify(table_settings),\r\n        },\r\n        type: \"POST\",\r\n        success(response) {\r\n        },\r\n        error(error) { },\r\n    });\r\n\r\n    // $.ajax({\r\n    //     url: gswpts_gutenberg_block.admin_ajax,\r\n    //     data: {\r\n    //         action: \"gswpts_sheet_create\",\r\n    //         table_settings: table_settings,\r\n    //         id: parseInt(id),\r\n    //         type: \"save_changes\",\r\n    //         gutenberg_req: true,\r\n    //         nonce: window?.gswpts_gutenberg_block?.create_nonce\r\n    //     },\r\n    //     type: \"POST\",\r\n    //     success: (res) => {\r\n    //         if ( res.data.type == \"invalid_action\" || res.data.type == \"invalid_request\" ) {\r\n    //             callAlert(\"Error &#128683;\", res.data.output, \"error\", 4);\r\n    //         }\r\n    //     },\r\n    //     error: (err) => {\r\n    //         callAlert(\"Error &#128683;\", \"<b>Something went wrong</b>\", \"error\", 3);\r\n    //     },\r\n    // });\r\n}\r\n","import React from \"react\";\r\n// import Select from \"react-select\";\r\nimport { Dropdown } from \"semantic-ui-react\";\r\n\r\nimport { saveChanges, callAlert } from \"./parts/helperFunctions\";\r\nimport { formatCellValues, rows_per_page, scrollHeights, redirectionValues, tableStyles, responsive_styles } from \"./parts/selectValues\";\r\n\r\nconst { useEffect, useRef, useState } = wp.element;\r\nconst { InspectorControls } = wp.blockEditor;\r\nconst { Panel, PanelBody, PanelRow, SelectControl, ToggleControl } = wp.components;\r\n\r\nvar $ = jQuery.noConflict();\r\n\r\nexport default function editFucntion({ attributes, setAttributes }) {\r\n    // const [gridError, setGridError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (attributes.sortcode_id) {\r\n            setAttributes({ table_selection: attributes.sortcode_id });\r\n            setAttributes({ show_choose_table: true });\r\n            setAttributes({ initializer_button_action: \"choose_table\" });\r\n            fetch_data_by_id(attributes.sortcode_id);\r\n        }\r\n    }, []);\r\n\r\n    const spreadsheet_container = useRef(null);\r\n    const sheetUrlRef = useRef(null);\r\n\r\n    function get_table_name_and_data() {\r\n        let select_options = [{ value: \"no_selection\", label: \"Select a table\" }];\r\n        if (attributes.saved_tables) {\r\n            attributes.saved_tables.forEach((table) => {\r\n                select_options.push({\r\n                    value: parseInt(table.id),\r\n                    label: table.table_name,\r\n                });\r\n            });\r\n        }\r\n        return select_options;\r\n    }\r\n\r\n    function getGridId(url) {\r\n        if (!url || url == \"\") return;\r\n\r\n        let gridID = null;\r\n\r\n        gridID = url.match(/gid=(\\w+)/);\r\n\r\n        if (!gridID) {\r\n            return null;\r\n        }\r\n\r\n        gridID = gridID[1];\r\n\r\n        if (gridID) return gridID;\r\n\r\n        return null;\r\n    }   \r\n\r\n    function fetch_data_by_url(url) {\r\n\t\t/* if (!isProPluginActive()) {\r\n            const gridId = getGridId(url);\r\n\r\n\t\t\tif (gridId > 0) {\r\n\t\t\t\tsetGridError(true);\r\n\t\t\t\treturn false;\r\n\t\t\t} else {\r\n\t\t\t\tsetGridError(false);\r\n\t\t\t}\r\n\t\t} */\r\n\r\n        $.ajax({\r\n            url: gswpts_gutenberg_block.admin_ajax,\r\n            data: {\r\n                action: \"swptls_create_table\",\r\n                name: attributes.init_table_name,\r\n                settings: JSON.stringify(attributes.table_settings),\r\n                sheet_url: url,\r\n                context: \"block\",\r\n                nonce: window?.gswpts_gutenberg_block?.nonce\r\n            },\r\n            type: \"POST\",\r\n            beforeSend: () => {\r\n                setAttributes({ show_settings: false });\r\n                if (attributes.req_type != \"save\") {\r\n                    setAttributes({ innerHTML: loader });\r\n                    setAttributes({ btn_text: \"Create\" });\r\n                }\r\n                setAttributes({ req_type: \"fetch\" });\r\n            },\r\n\r\n            success: (res) => {\r\n                if ( ! res.success ) {\r\n                    callAlert(\"Error &#128683;\", res.data.message, \"error\", 4);\r\n                    setAttributes({ req_type: \"fetch\" });\r\n                    setAttributes({ btn_text: \"Create\" });\r\n                    setAttributes({ show_settings: false });\r\n                    setAttributes({ innerHTML: res.data.output });\r\n\r\n                    if (res.data.type == \"empty_field\") {\r\n                        callAlert(\"Warning &#9888;&#65039;\", res.data.output, \"warning\", 3);\r\n                    }\r\n                }\r\n\r\n\r\n\r\n                if ( res.success ) {\r\n                    setAttributes({ sortcode_id: res.data.id });\r\n                    setAttributes({ req_type: \"save\" });\r\n                    setAttributes({ btn_text: \"Save Table\" });\r\n                    setAttributes({ innerHTML: res.data.output });\r\n                    setAttributes({ show_settings: true });\r\n                }\r\n\r\n                // let tableColumns = res.data.tableColumns;\r\n                // let formattedColumnValues = constructColumnValues(tableColumns);\r\n\r\n                // Set the column header values in tableColumns attribute\r\n                // setAttributes({ tableColumns: formattedColumnValues });\r\n\r\n                // immediateSaveTable(url);\r\n            },\r\n            complete: (res) => {\r\n                if (JSON.parse(res.responseText).success) {\r\n                    let default_settings = table_default_settings();\r\n                    let defaultRowsPerPage = default_settings.default_rows_per_page;\r\n                    let allowSorting = default_settings.allow_sorting;\r\n                    let verticalScroll = default_settings.vertical_scroll;\r\n                    let dom = '<\"#filtering_input\"lf>rt<\"#bottom_options\"ip>';\r\n                    let handle = `#${spreadsheet_container.current.id} #create_tables`;\r\n                    setAttributes({ is_table_saved_to_db: true });\r\n\r\n                    setTimeout(() => {\r\n                        $(handle).DataTable(\r\n                            table_object(defaultRowsPerPage, allowSorting, dom, verticalScroll)\r\n                        );\r\n\r\n                        callAlert(\"Successfull &#128077;\", \"<b>Google Sheet data fetched successfully</b>\", \"success\", 3);\r\n                    }, 300);\r\n\r\n                    /* setTimeout(() => {\r\n                        if (!isProPluginActive()) {\r\n                            callAlert(\r\n                                \"Warning &#9888;&#65039;\",\r\n                                \"<b>Live sync is limited to 30 rows.<br/><a target='blank' href='https://go.wppool.dev/DoC'>Upgrade to Pro</a> for showing full google sheet.</b>\",\r\n                                \"warning\",\r\n                                10\r\n                            );\r\n                        }\r\n                    }, 700); */\r\n                }\r\n            },\r\n            error: (err) => {\r\n                callAlert(\"Error &#128683;\", \"<b>Something went wrong</b>\", \"error\", 3);\r\n                setAttributes({ show_settings: false });\r\n                setAttributes({ innerHTML: \"<b>Something went wrong</b>\" });\r\n            },\r\n        });\r\n    }\r\n\r\n    function immediateSaveTable(url) {\r\n        $.ajax({\r\n            url: gswpts_gutenberg_block.admin_ajax,\r\n            data: {\r\n                action: \"gswpts_sheet_create\",\r\n                type: \"save\",\r\n                table_name: attributes.init_table_name,\r\n                table_settings: attributes.table_settings,\r\n                file_input: url,\r\n                source_type: \"spreadsheet\",\r\n                gutenberg_req: true,\r\n                nonce: window?.gswpts_gutenberg_block?.create_nonce\r\n            },\r\n            type: \"POST\",\r\n            beforeSend: () => {\r\n                setAttributes({ show_settings: false });\r\n            },\r\n            success: (res) => {\r\n                if (res.data.type == \"invalid_action\" || res.data.type == \"invalid_request\") {\r\n                    callAlert(\"Error &#128683;\", res.data.output, \"error\", 4);\r\n                }\r\n\r\n                if (res.data.type == \"empty_field\") {\r\n                    callAlert(\"Warning &#9888;&#65039;\", res.data.output, \"warning\", 3);\r\n                }\r\n\r\n                if (res.data.type == \"saved\") {\r\n                    let id = res.data.id;\r\n                    let tableName = attributes.init_table_name;\r\n                    setAttributes({ sortcode_id: parseInt(id) });\r\n                    setAttributes({ is_table_saved_to_db: true });\r\n                    setAttributes({ show_settings: true });\r\n                    setAttributes({ table_name: tableName });\r\n\r\n                    callAlert(\"Successfull &#128077;\", res.data.output, \"success\", 3);\r\n                }\r\n\r\n                if (res.data.type == \"sheet_exists\") {\r\n                    setAttributes({ show_settings: false });\r\n\r\n                    setAttributes({ block_init: false });\r\n                    setAttributes({ sheet_url: null });\r\n                    setAttributes({ btn_text: \"Create\" });\r\n                    setAttributes({ req_type: \"fetch\" });\r\n                    callAlert(\"Warning &#9888;&#65039;\", \"<b>Google sheet previously saved. Try choose table instead of creating</b>\", \"warning\", 6);\r\n                }\r\n            },\r\n\r\n            error: (err) => {\r\n                callAlert(\"Error &#128683;\", \"<b>Something went wrong</b>\", \"error\", 3);\r\n                setAttributes({ show_settings: false });\r\n                setAttributes({ innerHTML: \"<b>Something went wrong</b>\" });\r\n            },\r\n        });\r\n    }\r\n\r\n    function table_default_settings() {\r\n        return {\r\n            table_title: false,\r\n            show_description: false,\r\n            description_position: 'above',\r\n            table_description: '',\r\n            default_rows_per_page: 10,\r\n            show_info_block: false,\r\n            responsive_table: false,\r\n            show_x_entries: true,\r\n            swap_filter_inputs: false,\r\n            swap_bottom_options: false,\r\n            allow_sorting:false,\r\n            search_bar: true,\r\n            table_export: [],\r\n            vertical_scroll: null,\r\n            cell_format: \"expand\",\r\n            responsive_style: \"default_style\",\r\n            redirection_type: \"_blank\",\r\n            cursor_behavior: \"left_right\",\r\n            table_cache: false,\r\n            table_style: 'default-style',\r\n            merged_support: false,\r\n            isvertical: false,\r\n\r\n            //Column \r\n            hide_column: [],\r\n            hide_column_mobile: [],\r\n            hide_on_desktop_col:true,\r\n            hide_on_mobile_col:true,\r\n\r\n            // ROW \r\n            hide_rows: [],\r\n            hide_rows_mobile: [],\r\n            hide_on_desktop_rows:true,\r\n            hide_on_mobile_rows:true,\r\n\r\n            // Cells \r\n            hide_cell: [],\r\n            hide_cell_mobile: [],\r\n            hide_on_desktop_cell:true,\r\n            hide_on_mobile_cell:true,\r\n\r\n            import_styles: false,\r\n            table_styles: false,\r\n            table_img_support: false,\r\n            table_link_support: false,\r\n\r\n            import_styles_theme_colors: {\r\n                'default-style': {\r\n                    headerBGColor: '#ffffff',\r\n                    headerTextColor: '#000000',\r\n                    bodyBGColor: '#ffffff',\r\n                    bodyTextColorCol_1: '#333333',\r\n                    bodyTextColorColRest: '#6B7280',\r\n                    borderColor: '#e0e5f6',\r\n                    paginationStyle: 'default_pagination',\r\n                    paginationAciveBtnColor: '#828282',\r\n                    pagination_center: false,\r\n                },\r\n                'style-4': {\r\n                    headerBGColor: '#000',\r\n                    headerTextColor: '#ffffff',\r\n                    bodyBGColor: '#000f',\r\n                    bodyTextColor: '#ffffff',\r\n                    hoverBGColor: '#504949',\r\n                    paginationStyle: 'simple_pagination',\r\n                    paginationAciveBtnColor: '#000000',\r\n                    pagination_center: true,\r\n                },\r\n                'style-6': {\r\n                    headerBGColor: '#E5F1FF',\r\n                    headerTextColor: '#0f0f0f',\r\n                    bodyTextColor: '#0f0f0f',\r\n                    bodyBGColorEven: '#EBF4FF',\r\n                    bodyBGColorOdd: '#ffffff',\r\n                    hoverBGColor: '#bdcfe4',\r\n                    paginationStyle: 'tailwind_pagination',\r\n                    paginationAciveBtnColor: '#2D74E7',\r\n                    pagination_center: false,\r\n                },\r\n                'style-2': {\r\n                    headerBGColor: '#36304a',\r\n                    headerTextColor: '#ffffff',\r\n                    bodyTextColor: '#0f0f0f',\r\n                    bodyBGColorEven: '#f5f5f5',\r\n                    bodyBGColorOdd: '#ffffff',\r\n                    hoverBGColor: '#d1d1d1',\r\n                    borderType: 'solid',\r\n                    borderRadius: '10px',\r\n                    paginationStyle: 'modern_pagination',\r\n                    paginationAciveBtnColor: '#261C3B',\r\n                    pagination_center: false,\r\n                },\r\n                'style-3': {\r\n                    headerBGColor: '#6c7ae0',\r\n                    headerTextColor: '#ffffff',\r\n                    bodyTextColor: '#0f0f0f',\r\n                    bodyBGColorEven: '#f8f6ff',\r\n                    bodyBGColorOdd: '#ffffff',\r\n                    hoverBGColor: '#EDE8FC',\r\n                    borderColor: '#fafafa',\r\n                    borderType: 'solid',\r\n                    borderRadius: '10px',\r\n                    paginationStyle: 'outlined_pagination',\r\n                    paginationAciveBtnColor: '#5C51E0',\r\n                    pagination_center: false,\r\n                },\r\n                'style-5': {\r\n                    headerBGColor: '#F2F2F2',\r\n                    headerTextColor: '#333333',\r\n                    bodyBGColor: '#ffffff',\r\n                    bodyTextColor: '#0f0f0f',\r\n                    hoverBGColor: '#bdcfe4',\r\n                    borderColor: '#e4e1e1',\r\n                    borderType: 'solid',\r\n                    borderRadius: '10px',\r\n                    paginationStyle: 'tailwind_pagination',\r\n                    paginationAciveBtnColor: '#2F80ED',\r\n                    pagination_center: false,\r\n                },\r\n                'style-8': {\r\n                    headerBGColor: '#E0E7FF',\r\n                    headerTextColor: '#312E81',\r\n                    bodyBGColor: '#ffffff',\r\n                    bodyTextColor: '#333333',\r\n                    bodyTextColorCol_1: '#333333',\r\n                    bodyTextColorColRest: '#6B7280',\r\n                    hoverBGColor: '#e4e9f8',\r\n                    borderColor: '#e0e5f6',\r\n                    borderType: 'solid',\r\n                    borderRadius: '10px',\r\n                    paginationStyle: 'tailwind_pagination',\r\n                    paginationAciveBtnColor: '#5C51E0',\r\n                    pagination_center: false,\r\n                },\r\n                'style-1': {\r\n                    headerBGColor: '#6807f9',\r\n                    headerTextColor: '#ffffff',\r\n                    bodyBGColorEven: '#ffffff',\r\n                    bodyBGColorOdd: '#E9E7FF',\r\n                    bodyTextColor: '#000',\r\n                    borderColor: '#e0e5f6',\r\n                    hoverBGColor: '#EDE8FC',\r\n                    borderType: 'solid',\r\n                    borderRadius: '10px',\r\n                    paginationStyle: 'outlined_pagination',\r\n                    paginationAciveBtnColor: '#5C51E0',\r\n                    pagination_center: false,\r\n                },\r\n                'style-7': {\r\n                    headerBGColor: '#8880F8',\r\n                    headerTextColor: '#ffffff',\r\n                    bodyBGColor: '#34344C',\r\n                    bodyTextColor: '#ffffff',\r\n                    hoverBGColor: '#7e78d3',\r\n                    borderType: 'solid',\r\n                    borderRadius: '10px',\r\n                    paginationStyle: 'simple_pagination',\r\n                    paginationAciveBtnColor: '#34344C',\r\n                    pagination_center: true,\r\n                },\r\n            },\r\n        };\r\n    }\r\n\r\n    function fetch_data_by_id(id) {\r\n        if (typeof parseInt(id) != \"number\") {\r\n            setAttributes({\r\n                innerHTML: \"<h4>Choose saved table from block settings</h4>\",\r\n            });\r\n            return;\r\n        }\r\n\r\n        $.ajax({\r\n            url: gswpts_gutenberg_block.admin_ajax,\r\n            data: {\r\n                action: \"gswpts_sheet_fetch\",\r\n                id: parseInt(id),\r\n                nonce: window?.gswpts_gutenberg_block?.fetch_nonce\r\n            },\r\n            type: \"POST\",\r\n            beforeSend: () => {\r\n                setAttributes({ show_settings: false });\r\n                setAttributes({ table_name: \"\" });\r\n                setAttributes({ innerHTML: loader });\r\n            },\r\n            success: (res) => {\r\n                if (res.data.type == \"invalid_action\" || res.data.response_type == \"invalid_request\") {\r\n                    setAttributes({ innerHTML: res.data.output });\r\n                    setAttributes({ show_settings: false });\r\n                    setAttributes({ table_name: \"\" });\r\n\r\n                    callAlert(\"Error &#128683;\", res.data.output, \"error\", 4);\r\n                }\r\n\r\n                if ( res.data.type == \"no_table_found\") {\r\n                    setAttributes({ innerHTML: res.data.message });\r\n                    setAttributes({ show_settings: false });\r\n\r\n                    callAlert(\"Error &#128683;\", \"<b>No table found.</b>\", \"error\", 3);\r\n                }\r\n\r\n                if ( res.success) {\r\n                    setAttributes({ innerHTML: res.data.output });\r\n                    setAttributes({ show_settings: true });\r\n\r\n                    // let tableColumns = res.data.tableColumns;\r\n                    // let formattedColumnValues = constructColumnValues(tableColumns);\r\n\r\n                    // Set the column header values in tableColumns attribute\r\n                    // setAttributes({ tableColumns: formattedColumnValues });\r\n\r\n                    callAlert(\"Successfull &#128077;\", \"<b>Google Sheet data fetched successfully</b>\", \"success\", 3);\r\n                }\r\n            },\r\n\r\n            error: (err) => {\r\n                callAlert(\"Error &#128683;\", \"<b>Something went wrong</b>\", \"error\", 3);\r\n                setAttributes({ innerHTML: \"\" });\r\n                setAttributes({ btn_text: \"Create\" });\r\n            },\r\n\r\n            complete: (res) => {\r\n                if (JSON.parse(res.responseText).success) {\r\n                    let table_settings = JSON.parse(res.responseText).data.table_settings;\r\n                    let table_name = JSON.parse(res.responseText).data.name;\r\n\r\n                    let dom = `<\"#filtering_input\"${table_settings.show_x_entries ? \"l\" : \"\"}${\r\n                        table_settings.search_bar ? \"f\" : \"\"\r\n                    }>rt<\"#bottom_options\"${table_settings.show_info_block ? \"i\" : \"\"}p>`;\r\n\r\n                    let defaultRowsPerPage = table_settings.default_rows_per_page;\r\n                    let allowSorting = table_settings.allow_sorting;\r\n                    let verticalScroll = table_settings.vertical_scroll;\r\n                    let cellFormat = table_settings.cell_format;\r\n                    let redirectionType = table_settings.redirection_type;\r\n                    let hideColumn = table_settings.hide_column;\r\n\r\n                    setAttributes({ table_name: table_name });\r\n\r\n                    setTimeout(() => {\r\n                        if (isProPluginActive()) {\r\n                            changeCellFormat(cellFormat, id);\r\n                            changeRedirectionType(redirectionType, id);\r\n                        }\r\n\r\n                        // Intitiale the data table feature in gutenberg table\r\n                        $(\"#\" + id + \" #create_tables\").DataTable(table_object(defaultRowsPerPage, allowSorting, dom, verticalScroll, hideColumn));\r\n\r\n                        update_default_attributes(table_settings);\r\n\r\n                        let swap_filter_state = table_settings.swap_filter_inputs;\r\n                        let swap_bottom_state = table_settings.swap_bottom_options;\r\n\r\n                        swap_input_filter(id, swap_filter_state);\r\n                        // swap_bottom_options(id, swap_bottom_state);\r\n                    }, 700);\r\n                }\r\n            },\r\n        });\r\n    }\r\n\r\n    function constructColumnValues(columns) {\r\n        let columnValues = [];\r\n\r\n        if (!columns) return columnValues;\r\n\r\n        columns.forEach((column, i) => {\r\n            columnValues.push({\r\n                key: i,\r\n                value: i,\r\n                text: column,\r\n            });\r\n        });\r\n\r\n        return columnValues;\r\n    }\r\n\r\n    function update_default_attributes(ajax_table_settings) {\r\n        const prevSettingObj = { ...attributes.table_settings };\r\n        prevSettingObj.show_title = ajax_table_settings.show_title;\r\n        prevSettingObj.defaultRowsPerPage = ajax_table_settings.default_rows_per_page;\r\n        prevSettingObj.showInfoBlock = ajax_table_settings.show_info_block;\r\n\r\n        prevSettingObj.showXEntries = ajax_table_settings.show_x_entries;\r\n        prevSettingObj.swapFilterInputs = ajax_table_settings.swap_filter_inputs;\r\n        prevSettingObj.swapBottomOptions = ajax_table_settings.swap_bottom_options;\r\n        prevSettingObj.allowSorting = ajax_table_settings.allow_sorting;\r\n        prevSettingObj.searchBar = ajax_table_settings.search_bar;\r\n\r\n        if (ajax_table_settings.responsive_style) {\r\n            prevSettingObj.responsive_style = ajax_table_settings.responsive_style;\r\n            }\r\n            \r\n            if (ajax_table_settings.vertical_scroll) {\r\n                prevSettingObj.verticalScroll = ajax_table_settings.vertical_scroll;\r\n            }\r\n\r\n            if (ajax_table_settings.cell_format) {\r\n                prevSettingObj.cellFormat = ajax_table_settings.cell_format;\r\n            }\r\n            \r\n            if (ajax_table_settings.redirection_type) {\r\n                prevSettingObj.redirectionType = ajax_table_settings.redirection_type;\r\n            }\r\n            \r\n            // update the table cache input value\r\n            prevSettingObj.tableCache = ajax_table_settings.table_cache;\r\n            \r\n        if (isProPluginActive()) {\r\n            // update the table style input\r\n            if (ajax_table_settings.redirection_type) {\r\n                prevSettingObj.tableStyle = ajax_table_settings.table_style;\r\n            }\r\n\r\n            // Update the Hide column values to show it in input field\r\n            if (ajax_table_settings.hide_column) {\r\n                prevSettingObj.hideColumn = ajax_table_settings.hide_column;\r\n            }\r\n\r\n            // Update the Import sheet style input value\r\n            prevSettingObj.importStyles = ajax_table_settings.import_styles;\r\n        }\r\n        setAttributes({ table_settings: prevSettingObj });\r\n    }\r\n\r\n    function table_changer(id = null, prevSettingObj) {\r\n        let dom = `<\"#filtering_input\"${prevSettingObj.showXEntries ? \"l\" : \"\"}${prevSettingObj.searchBar ? \"f\" : \"\"}>rt<\"#bottom_options\"${\r\n            prevSettingObj.showInfoBlock ? \"i\" : \"\"\r\n        }p>`;\r\n        if (id == null) {\r\n            $(\"#\" + spreadsheet_container.current.id + \" #create_tables\").DataTable(\r\n                table_object(\r\n                    prevSettingObj.defaultRowsPerPage,\r\n                    prevSettingObj.allowSorting,\r\n                    dom,\r\n                    prevSettingObj.verticalScroll,\r\n                    prevSettingObj.hideColumn\r\n                )\r\n            );\r\n        } else {\r\n            $(\"#\" + id + \" #create_tables\").DataTable(\r\n                table_object(\r\n                    prevSettingObj.defaultRowsPerPage,\r\n                    prevSettingObj.allowSorting,\r\n                    dom,\r\n                    prevSettingObj.verticalScroll,\r\n                    prevSettingObj.hideColumn\r\n                )\r\n            );\r\n        }\r\n    }\r\n\r\n    function swap_input_filter(table_id, filter_state) {\r\n        let selector = null;\r\n\r\n        if (table_id == null) {\r\n            selector = spreadsheet_container.current.id;\r\n        } else {\r\n            selector = table_id;\r\n        }\r\n\r\n        /* If checkbox is checked then swap filter */\r\n\r\n        if (filter_state) {\r\n            $(\"#\" + selector + \" #filtering_input\").css(\"flex-direction\", \"row-reverse\");\r\n            $(\"#\" + selector + \" #create_tables_length\").css({\r\n                \"margin-right\": \"0\",\r\n                \"margin-left\": \"auto\",\r\n            });\r\n            $(\"#\" + selector + \" #create_tables_filter\").css({\r\n                \"margin-left\": \"0\",\r\n                \"margin-right\": \"auto\",\r\n            });\r\n        } else {\r\n            /* Set back to default position */\r\n            $(\"#\" + selector + \" #filtering_input\").css(\"flex-direction\", \"row\");\r\n            $(\"#\" + selector + \" #create_tables_length\").css({\r\n                \"margin-right\": \"auto\",\r\n                \"margin-left\": \"0\",\r\n            });\r\n            $(\"#\" + selector + \" #create_tables_filter\").css({\r\n                \"margin-left\": \"auto\",\r\n                \"margin-right\": \"0\",\r\n            });\r\n        }\r\n    }\r\n\r\n    function swap_bottom_options(table_id, bottom_state) {\r\n        let selector = null;\r\n\r\n        if (table_id == null) {\r\n            selector = spreadsheet_container.current.id;\r\n        } else {\r\n            selector = table_id;\r\n        }\r\n\r\n        let pagination_menu = $(\"#\" + selector + \" #bottom_options .pagination.menu\");\r\n\r\n        let style = {\r\n            flex_direction: \"row-reverse\",\r\n            table_info_style: {\r\n                margin_right: 0,\r\n                margin_left: \"auto\",\r\n            },\r\n            table_paginate_style: {\r\n                margin_right: \"auto\",\r\n                margin_left: 0,\r\n            },\r\n        };\r\n\r\n        if (bottom_state) {\r\n            if (pagination_menu.children().length > 5) {\r\n                overflow_menu_style(selector);\r\n            } else {\r\n                bottom_option_style(style, selector);\r\n            }\r\n        } else {\r\n            if (pagination_menu.children().length > 5) {\r\n                overflow_menu_style(selector);\r\n            } else {\r\n                style[\"flex_direction\"] = \"row\";\r\n\r\n                style.table_info_style[\"margin_left\"] = 0;\r\n                style.table_info_style[\"margin_right\"] = \"auto\";\r\n\r\n                style.table_paginate_style[\"margin_left\"] = \"auto\";\r\n                style.table_paginate_style[\"margin_right\"] = 0;\r\n\r\n                bottom_option_style(style, selector);\r\n            }\r\n        }\r\n    }\r\n\r\n    function overflow_menu_style(selector) {\r\n        $(\"#\" + selector + \" #bottom_options\").css(\"flex-direction\", \"column\");\r\n        $(\"#\" + selector + \" #create_tables_info\").css({\r\n            margin: \"5px auto\",\r\n        });\r\n        $(\"#\" + selector + \" #create_tables_paginate\").css({\r\n            margin: \"5px auto\",\r\n        });\r\n    }\r\n\r\n    function bottom_option_style($arg, selector) {\r\n        $(\"#\" + selector + \" #bottom_options\").css(\"flex-direction\", $arg[\"flex_direction\"]);\r\n        $(\"#\" + selector + \" #create_tables_info\").css({\r\n            \"margin-left\": $arg[\"table_info_style\"][\"margin_left\"],\r\n            \"margin-right\": $arg[\"table_info_style\"][\"margin_right\"],\r\n        });\r\n        $(\"#\" + selector + \" #create_tables_paginate\").css({\r\n            \"margin-left\": $arg[\"table_paginate_style\"][\"margin_left\"],\r\n            \"margin-right\": $arg[\"table_paginate_style\"][\"margin_right\"],\r\n        });\r\n    }\r\n\r\n    let loader = `\r\n                <div class=\"ui segment gswpts_table_loader\">\r\n                            <div class=\"ui active inverted dimmer\">\r\n                                <div class=\"ui large text loader\">Loading</div>\r\n                            </div>\r\n                            <p></p>\r\n                            <p></p>\r\n                            <p></p>\r\n                    </div>\r\n                `;\r\n\r\n    function table_object(pageLength, ordering, dom, verticalScroll, hideColumn) {\r\n        let obj = {\r\n            dom: dom,\r\n            order: [],\r\n            responsive: true,\r\n            lengthMenu: [\r\n                [1, 5, 10, 15],\r\n                [1, 5, 10, 15],\r\n            ],\r\n            pageLength: parseInt(pageLength),\r\n            lengthChange: true,\r\n            ordering: ordering,\r\n            destroy: true,\r\n            scrollX: true,\r\n        };\r\n\r\n        if (isProPluginActive()) {\r\n            obj.lengthMenu = [\r\n                [1, 5, 10, 15, 25, 50, 100, -1],\r\n                [1, 5, 10, 15, 25, 50, 100, \"All\"],\r\n            ];\r\n\r\n            if (verticalScroll != \"default\") {\r\n                obj.scrollY = `${verticalScroll}px`;\r\n            }\r\n        }\r\n\r\n        if (screenSize() === \"desktop\") {\r\n            if (hideColumn?.desktopValues) {\r\n                obj.columnDefs = hideColumnByScreen(hideColumn.desktopValues);\r\n            }\r\n        } else {\r\n            if (hideColumn?.mobileValues) {\r\n                obj.columnDefs = hideColumnByScreen(hideColumn.mobileValues);\r\n            }\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    // Return an array that will define the columns to hide\r\n    function hideColumnByScreen(arrayValues) {\r\n        return [\r\n            {\r\n                targets: convertArrayStringToInteger(arrayValues),\r\n                visible: false,\r\n                searchable: false,\r\n            },\r\n        ];\r\n    }\r\n\r\n    // convert string to integer from arrays\r\n    function convertArrayStringToInteger(arr) {\r\n        if (!arr) return [];\r\n        return arr.map((val) => parseInt(val));\r\n    }\r\n    // convert string to integer from arrays\r\n    function convertArrayIntegerToString(arr) {\r\n        if (!arr) return [];\r\n        return arr.map((val) => `${val}`);\r\n    }\r\n\r\n    // get the current screen size of user. If greater than 740 return desktop or return mobile\r\n    function screenSize() {\r\n        // Desktop screen size\r\n        if (screen.width > 740) {\r\n            return \"desktop\";\r\n        } else {\r\n            return \"mobile\";\r\n        }\r\n    }\r\n\r\n    function isProPluginActive() {\r\n        if (gswpts_gutenberg_block.isProActive) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    // Change the cell format of the table\r\n    function changeCellFormat(formatStyle, tableID) {\r\n        let tableCells = null;\r\n        if (tableID == null) {\r\n            tableCells = $(\"#\" + spreadsheet_container.current.id + \" table th, td\");\r\n        } else {\r\n            tableCells = $(\"#\" + tableID + \" table th, td\");\r\n        }\r\n\r\n        switch (formatStyle) {\r\n            case \"wrap\":\r\n                $.each(tableCells, function (i, cell) {\r\n                    $(cell).removeClass(\"clip_style\");\r\n                    $(cell).removeClass(\"expanded_style\");\r\n                    $(cell).addClass(\"wrap_style\");\r\n                });\r\n                break;\r\n\r\n            case \"clip\":\r\n                $.each(tableCells, function (i, cell) {\r\n                    $(cell).removeClass(\"wrap_style\");\r\n                    $(cell).removeClass(\"expanded_style\");\r\n                    $(cell).addClass(\"clip_style\");\r\n                });\r\n                break;\r\n            case \"expand\":\r\n                $.each(tableCells, function (i, cell) {\r\n                    $(cell).removeClass(\"clip_style\");\r\n                    $(cell).removeClass(\"wrap_style\");\r\n                    $(cell).addClass(\"expanded_style\");\r\n                });\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    function changeRedirectionType(type, tableID = null) {\r\n        let links = null;\r\n        if (tableID == null) {\r\n            links = $(\"#\" + spreadsheet_container.current.id + \" table a\");\r\n        } else {\r\n            links = $(\"#\" + tableID + \" table a\");\r\n        }\r\n        if (!links.length) return;\r\n        $.each(links, function (i, link) {\r\n            $(link).attr(\"target\", type);\r\n        });\r\n    }\r\n\r\n    function displayProPopup() {\r\n        WPPOOL.Popup('sheets_to_wp_table_live_sync').show();\r\n    }\r\n\r\n    return [\r\n        <InspectorControls style=\"margin-top: 40px\">\r\n            <Panel header=\"FlexTable\">\r\n                {attributes.show_choose_table ? (\r\n                    <PanelBody title=\"Choose Table\" icon=\"media-text\" initialOpen={true}>\r\n                        <SelectControl\r\n                            label=\"Select Table\"\r\n                            value={attributes.table_selection}\r\n                            onChange={(val) => {\r\n                                setAttributes({ table_selection: val });\r\n                                setAttributes({\r\n                                    sortcode_id: typeof val == \"string\" ? parseInt(val) : null,\r\n                                });\r\n                                fetch_data_by_id(val);\r\n                            }}\r\n                            options={get_table_name_and_data()}\r\n                        />\r\n                    </PanelBody>\r\n                ) : (\r\n                    <></>\r\n                )}\r\n\r\n                {attributes.show_settings ? (\r\n                    <>\r\n                        {/* <PanelBody title=\"Display Settings\" icon=\"admin-settings\" initialOpen={false}>\r\n                            <PanelRow>\r\n                                <ToggleControl\r\n                                    label=\"Show Title\"\r\n                                    help=\"Enable this to show the table title in h3 tag above the table\"\r\n                                    checked={attributes.table_settings.show_title}\r\n                                    onChange={() => {\r\n                                        const prevSettingObj = { ...attributes.table_settings };\r\n                                        prevSettingObj.show_title = !prevSettingObj.show_title;\r\n                                        setAttributes({ table_settings: prevSettingObj });\r\n\r\n                                        saveChanges(attributes.sortcode_id, prevSettingObj);\r\n                                    }}\r\n                                />\r\n                                <br />\r\n                            </PanelRow>\r\n\r\n                            <PanelRow>\r\n                                <div class=\"default_rows\">\r\n                                    <h5 class=\"header\">Default rows per page</h5>\r\n                                    <p>This will show rows per page in the frontend</p>\r\n\r\n                                    <SelectControl\r\n                                        label=\"Default rows per page\"\r\n                                        value={attributes.table_settings.defaultRowsPerPage}\r\n                                        onChange={(val) => {\r\n                                            const prevSettingObj = {\r\n                                                ...attributes.table_settings,\r\n                                            };\r\n                                            prevSettingObj.defaultRowsPerPage = val;\r\n                                            setAttributes({ table_settings: prevSettingObj });\r\n\r\n                                            saveChanges(attributes.sortcode_id, prevSettingObj);\r\n\r\n                                            table_changer(attributes.sortcode_id, prevSettingObj);\r\n\r\n                                            swap_input_filter(attributes.sortcode_id, prevSettingObj.swapFilterInputs);\r\n                                            swap_bottom_options(attributes.sortcode_id, prevSettingObj.swapBottomOptions);\r\n                                        }}\r\n                                        options={rows_per_page(isProPluginActive())}\r\n                                    />\r\n                                </div>\r\n                                <br />\r\n                            </PanelRow>\r\n\r\n                            <PanelRow>\r\n                                <ToggleControl\r\n                                    label=\"Show info block\"\r\n                                    help=\"Show Showing X to Y of Z entries block below the table\"\r\n                                    checked={attributes.table_settings.showInfoBlock}\r\n                                    onChange={() => {\r\n                                        const prevSettingObj = { ...attributes.table_settings };\r\n                                        prevSettingObj.showInfoBlock = !prevSettingObj.showInfoBlock;\r\n                                        setAttributes({ table_settings: prevSettingObj });\r\n\r\n                                        saveChanges(attributes.sortcode_id, prevSettingObj);\r\n\r\n                                        table_changer(attributes.sortcode_id, prevSettingObj);\r\n\r\n                                        swap_input_filter(attributes.sortcode_id, prevSettingObj.swapFilterInputs);\r\n                                        swap_bottom_options(attributes.sortcode_id, prevSettingObj.swapBottomOptions);\r\n                                    }}\r\n                                />\r\n                                <br />\r\n                            </PanelRow>\r\n\r\n                            {isProPluginActive() ? (\r\n                                <PanelRow>\r\n                                    <div class=\"responsive_style\">\r\n                                        <h5 class=\"header\">Responsive Style</h5>\r\n                                        <p>Allow the table to collapse or scroll on mobile and tablet screen.</p>\r\n\r\n                                        <SelectControl\r\n                                            label=\"Responsive Style\"\r\n                                            value={attributes.table_settings.responsive_style}\r\n                                            onChange={(val) => {\r\n                                                const prevSettingObj = {\r\n                                                    ...attributes.table_settings,\r\n                                                };\r\n\r\n                                                prevSettingObj.responsive_style = val;\r\n                                                setAttributes({ table_settings: prevSettingObj });\r\n\r\n                                                saveChanges(attributes.sortcode_id, prevSettingObj);\r\n                                            }}\r\n                                            options={responsive_styles(isProPluginActive(), gswpts_gutenberg_block.responsive_styles)}\r\n                                        />\r\n                                    </div>\r\n                                    <br />\r\n                                </PanelRow>\r\n                            ) : null}\r\n\r\n                            <PanelRow>\r\n                                <ToggleControl\r\n                                    label=\"Show X entries\"\r\n                                    help=\"Show X entries per page dropdown\"\r\n                                    checked={attributes.table_settings.showXEntries}\r\n                                    onChange={() => {\r\n                                        const prevSettingObj = { ...attributes.table_settings };\r\n                                        prevSettingObj.showXEntries = !prevSettingObj.showXEntries;\r\n                                        setAttributes({ table_settings: prevSettingObj });\r\n\r\n                                        saveChanges(attributes.sortcode_id, prevSettingObj);\r\n\r\n                                        table_changer(attributes.sortcode_id, prevSettingObj);\r\n                                        swap_input_filter(attributes.sortcode_id, prevSettingObj.swapFilterInputs);\r\n                                        swap_bottom_options(attributes.sortcode_id, prevSettingObj.swapBottomOptions);\r\n                                    }}\r\n                                />\r\n                                <br />\r\n                            </PanelRow>\r\n\r\n                            {isProPluginActive() ? (\r\n                                <PanelRow>\r\n                                    <div class=\"verticall_scrolling\">\r\n                                        <h5 class=\"header\">Table Height</h5>\r\n                                        <p>\r\n                                            Choose the height of the table to scroll vertically. Activating this feature will allow the table to\r\n                                            behave as sticky header\r\n                                        </p>\r\n\r\n                                        <SelectControl\r\n                                            label=\"Vertical Scroll\"\r\n                                            value={attributes.table_settings.verticalScroll}\r\n                                            onChange={(val) => {\r\n                                                const prevSettingObj = {\r\n                                                    ...attributes.table_settings,\r\n                                                };\r\n\r\n                                                prevSettingObj.verticalScroll = val;\r\n                                                setAttributes({ table_settings: prevSettingObj });\r\n\r\n                                                saveChanges(attributes.sortcode_id, prevSettingObj);\r\n                                                table_changer(attributes.sortcode_id, prevSettingObj);\r\n                                                swap_input_filter(attributes.sortcode_id, prevSettingObj.swapFilterInputs);\r\n                                                swap_bottom_options(attributes.sortcode_id, prevSettingObj.swapBottomOptions);\r\n                                            }}\r\n                                            options={scrollHeights(isProPluginActive(), gswpts_gutenberg_block.scrollHeights)}\r\n                                        />\r\n                                    </div>\r\n                                    <br />\r\n                                </PanelRow>\r\n                            ) : null}\r\n\r\n                            {isProPluginActive() ? (\r\n                                <PanelRow>\r\n                                    <div class=\"cell_format\">\r\n                                        <h5 class=\"header\">Format Table Cell</h5>\r\n                                        <p>\r\n                                            Format the table cell as like google sheet cell formatting. Format your cell as Wrap or Clip or Expanded\r\n                                            style\r\n                                        </p>\r\n\r\n                                        <SelectControl\r\n                                            label=\"Cell Format\"\r\n                                            value={attributes.table_settings.cellFormat}\r\n                                            onChange={(val) => {\r\n                                                const prevSettingObj = {\r\n                                                    ...attributes.table_settings,\r\n                                                };\r\n\r\n                                                prevSettingObj.cellFormat = val;\r\n                                                setAttributes({ table_settings: prevSettingObj });\r\n\r\n                                                saveChanges(attributes.sortcode_id, prevSettingObj);\r\n\r\n                                                changeCellFormat(prevSettingObj.cellFormat, attributes.sortcode_id);\r\n\r\n                                                table_changer(attributes.sortcode_id, prevSettingObj);\r\n                                                swap_input_filter(attributes.sortcode_id, prevSettingObj.swapFilterInputs);\r\n                                                swap_bottom_options(attributes.sortcode_id, prevSettingObj.swapBottomOptions);\r\n                                            }}\r\n                                            options={formatCellValues(isProPluginActive())}\r\n                                        />\r\n                                    </div>\r\n                                    <br />\r\n                                </PanelRow>\r\n                            ) : null}\r\n\r\n                            {isProPluginActive() ? (\r\n                                <PanelRow>\r\n                                    <div class=\"redirection_type\">\r\n                                        <h5 class=\"header\">Link Redirection Type</h5>\r\n                                        <p>\r\n                                            Choose your desired table style for this table. This will change the design & color of this table\r\n                                            according to your selected table design\r\n                                        </p>\r\n\r\n                                        <SelectControl\r\n                                            label=\"Redirection Type\"\r\n                                            value={attributes.table_settings.redirectionType}\r\n                                            onChange={(val) => {\r\n                                                const prevSettingObj = {\r\n                                                    ...attributes.table_settings,\r\n                                                };\r\n\r\n                                                prevSettingObj.redirectionType = val;\r\n                                                setAttributes({ table_settings: prevSettingObj });\r\n\r\n                                                saveChanges(attributes.sortcode_id, prevSettingObj);\r\n\r\n                                                changeRedirectionType(prevSettingObj.redirectionType, attributes.sortcode_id);\r\n\r\n                                                table_changer(attributes.sortcode_id, prevSettingObj);\r\n                                                swap_input_filter(attributes.sortcode_id, prevSettingObj.swapFilterInputs);\r\n                                                swap_bottom_options(attributes.sortcode_id, prevSettingObj.swapBottomOptions);\r\n                                            }}\r\n                                            options={redirectionValues(isProPluginActive())}\r\n                                        />\r\n                                    </div>\r\n                                    <br />\r\n                                </PanelRow>\r\n                            ) : null}\r\n\r\n                            <PanelRow>\r\n                                <ToggleControl\r\n                                    label=\"Swap Filters\"\r\n                                    help=\"Swap the places of X entries dropdown and search filter input\"\r\n                                    checked={attributes.table_settings.swapFilterInputs}\r\n                                    onChange={() => {\r\n                                        const prevSettingObj = { ...attributes.table_settings };\r\n                                        prevSettingObj.swapFilterInputs = !prevSettingObj.swapFilterInputs;\r\n                                        setAttributes({ table_settings: prevSettingObj });\r\n                                        swap_input_filter(attributes.sortcode_id, prevSettingObj.swapFilterInputs);\r\n\r\n                                        saveChanges(attributes.sortcode_id, prevSettingObj);\r\n                                    }}\r\n                                />\r\n                                <br />\r\n                            </PanelRow>\r\n\r\n                            <PanelRow>\r\n                                <ToggleControl\r\n                                    label=\"Swap Bottom Elements\"\r\n                                    help=\"Swap the places of Showing X to Y of Z entries with table pagination filter\"\r\n                                    checked={attributes.table_settings.swapBottomOptions}\r\n                                    onChange={() => {\r\n                                        const prevSettingObj = { ...attributes.table_settings };\r\n                                        prevSettingObj.swapBottomOptions = !prevSettingObj.swapBottomOptions;\r\n                                        setAttributes({ table_settings: prevSettingObj });\r\n                                        swap_bottom_options(attributes.sortcode_id, prevSettingObj.swapBottomOptions);\r\n\r\n                                        saveChanges(attributes.sortcode_id, prevSettingObj);\r\n                                    }}\r\n                                />\r\n                                <br />\r\n                            </PanelRow>\r\n\r\n                            {isProPluginActive() ? (\r\n                                <PanelRow>\r\n                                    <div class=\"table_style\">\r\n                                        <h5 class=\"header\">Table Style</h5>\r\n                                        <p>\r\n                                            Choose your desired table style for this table. This will change the design & color of this table\r\n                                            according to your selected table design\r\n                                        </p>\r\n\r\n                                        <SelectControl\r\n                                            label=\"Choose Style\"\r\n                                            value={attributes.table_settings.tableStyle}\r\n                                            onChange={(val) => {\r\n                                                const prevSettingObj = {\r\n                                                    ...attributes.table_settings,\r\n                                                };\r\n\r\n                                                prevSettingObj.tableStyle = val;\r\n                                                setAttributes({ table_settings: prevSettingObj });\r\n\r\n                                                saveChanges(attributes.sortcode_id, prevSettingObj);\r\n\r\n                                                table_changer(attributes.sortcode_id, prevSettingObj);\r\n                                            }}\r\n                                            options={tableStyles(isProPluginActive(), gswpts_gutenberg_block.tableStyles)}\r\n                                        />\r\n                                    </div>\r\n                                    <br />\r\n                                </PanelRow>\r\n                            ) : null}\r\n\r\n                            {isProPluginActive() ? (\r\n                                <PanelRow>\r\n                                    <div class=\"import_styles\">\r\n                                        <h5 class=\"header\">Import Sheet Styles</h5>\r\n                                        <ToggleControl\r\n                                            label=\"Import Sheet Styles\"\r\n                                            help=\" Import cell background color & cell font color from\r\n                                            google sheet. If you activate this feature it will\r\n                                            override <i>Table Style</i> settings\"\r\n                                            checked={attributes.table_settings.importStyles}\r\n                                            onChange={(val) => {\r\n                                                const prevSettingObj = {\r\n                                                    ...attributes.table_settings,\r\n                                                };\r\n\r\n                                                prevSettingObj.importStyles = !prevSettingObj.importStyles;\r\n\r\n                                                setAttributes({ table_settings: prevSettingObj });\r\n\r\n                                                saveChanges(attributes.sortcode_id, prevSettingObj);\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                    <br />\r\n                                </PanelRow>\r\n                            ) : null}\r\n                        </PanelBody> */}\r\n\r\n                        {/* <PanelBody title=\"Sort & Filter\" icon=\"filter\" initialOpen={false}>\r\n                            <PanelRow>\r\n                                <ToggleControl\r\n                                    label=\"Allow Sorting\"\r\n                                    help=\"Enable this feature to sort table data for frontend.\"\r\n                                    checked={attributes.table_settings.allowSorting}\r\n                                    onChange={() => {\r\n                                        const prevSettingObj = { ...attributes.table_settings };\r\n                                        prevSettingObj.allowSorting = !prevSettingObj.allowSorting;\r\n                                        setAttributes({ table_settings: prevSettingObj });\r\n                                        table_changer(attributes.sortcode_id, prevSettingObj);\r\n                                        swap_input_filter(attributes.sortcode_id, prevSettingObj.swapFilterInputs);\r\n                                        swap_bottom_options(attributes.sortcode_id, prevSettingObj.swapBottomOptions);\r\n\r\n                                        saveChanges(attributes.sortcode_id, prevSettingObj);\r\n                                    }}\r\n                                />\r\n                                <br />\r\n                            </PanelRow>\r\n\r\n                            <PanelRow>\r\n                                <ToggleControl\r\n                                    label=\"Search Bar\"\r\n                                    help=\"Enable this feature to show a search bar in for the table. It will help user to search data in the table\"\r\n                                    checked={attributes.table_settings.searchBar}\r\n                                    onChange={() => {\r\n                                        const prevSettingObj = { ...attributes.table_settings };\r\n                                        prevSettingObj.searchBar = !prevSettingObj.searchBar;\r\n                                        setAttributes({ table_settings: prevSettingObj });\r\n                                        table_changer(attributes.sortcode_id, prevSettingObj);\r\n                                        swap_input_filter(attributes.sortcode_id, prevSettingObj.swapFilterInputs);\r\n                                        swap_bottom_options(attributes.sortcode_id, prevSettingObj.swapBottomOptions);\r\n\r\n                                        saveChanges(attributes.sortcode_id, prevSettingObj);\r\n                                    }}\r\n                                />\r\n                                <br />\r\n                            </PanelRow>\r\n                        </PanelBody> */}\r\n\r\n                        {/* {isProPluginActive() ? (\r\n                            <PanelBody title=\"Table Tools\" icon=\"admin-tools\" initialOpen={false}>\r\n                                <PanelRow>\r\n                                    <div class=\"hide_column\">\r\n                                        <h5 class=\"header\">Hide Columns In Desktop Screen:</h5>\r\n                                        <p>Hide your table columns on desktop screen size.</p>\r\n\r\n                                        <Dropdown\r\n                                            placeholder=\"\"\r\n                                            defaultValue={\r\n                                                attributes.table_settings.hideColumn?.desktopValues\r\n                                                    ? convertArrayStringToInteger(attributes.table_settings.hideColumn.desktopValues)\r\n                                                    : \"\"\r\n                                            }\r\n                                            selection\r\n                                            multiple\r\n                                            options={attributes.tableColumns}\r\n                                            onChange={(e, { value }) => {\r\n                                                const prevSettingObj = {\r\n                                                    ...attributes.table_settings,\r\n                                                };\r\n                                                prevSettingObj.hideColumn.desktopValues = convertArrayIntegerToString(value);\r\n\r\n                                                setAttributes({ table_settings: prevSettingObj });\r\n                                                saveChanges(attributes.sortcode_id, prevSettingObj);\r\n\r\n                                                table_changer(attributes.sortcode_id, prevSettingObj);\r\n                                                swap_input_filter(attributes.sortcode_id, prevSettingObj.swapFilterInputs);\r\n                                                swap_bottom_options(attributes.sortcode_id, prevSettingObj.swapBottomOptions);\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                    <br />\r\n                                </PanelRow>\r\n\r\n                                <PanelRow>\r\n                                    <div class=\"hide_column\">\r\n                                        <h5 class=\"header\">Hide Columns In Mobile Screen:</h5>\r\n                                        <p>Hide your table columns on mobile screen size.</p>\r\n                                        <Dropdown\r\n                                            placeholder=\"\"\r\n                                            defaultValue={\r\n                                                attributes.table_settings.hideColumn?.mobileValues != null\r\n                                                    ? convertArrayStringToInteger(attributes.table_settings.hideColumn.mobileValues)\r\n                                                    : \"\"\r\n                                            }\r\n                                            selection\r\n                                            multiple\r\n                                            options={attributes.tableColumns}\r\n                                            onChange={(e, { value }) => {\r\n                                                const prevSettingObj = {\r\n                                                    ...attributes.table_settings,\r\n                                                };\r\n                                                prevSettingObj.hideColumn.mobileValues = convertArrayIntegerToString(value);\r\n                                                setAttributes({ table_settings: prevSettingObj });\r\n                                                saveChanges(attributes.sortcode_id, prevSettingObj);\r\n\r\n                                                table_changer(attributes.sortcode_id, prevSettingObj);\r\n                                                swap_input_filter(attributes.sortcode_id, prevSettingObj.swapFilterInputs);\r\n                                                swap_bottom_options(attributes.sortcode_id, prevSettingObj.swapBottomOptions);\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                    <br />\r\n                                </PanelRow>\r\n                            </PanelBody>\r\n                        ) : null} */}\r\n                    </>\r\n                ) : (\r\n                    <></>\r\n                )}\r\n            </Panel>\r\n        </InspectorControls>,\r\n        <div\r\n            class={`gswpts_create_table_container gswpts_create_table_container gswpts_${embedTableStyleClass(attributes)}`}\r\n            id={attributes.sortcode_id}\r\n            style={{ marginRight: \"0\" }}\r\n        >\r\n            {\" \"}\r\n            {/* {attributes.table_name != \"\" && attributes.table_settings.show_title ? <h3> {attributes.table_name} </h3> : <> </>}{\" \"} */}\r\n            {attributes.block_init ? (\r\n                attributes.initializer_button_action == \"choose_table\" ? (\r\n                    <div id=\"spreadsheet_container\" dangerouslySetInnerHTML={{ __html: attributes.innerHTML }}></div>\r\n                ) : (\r\n                    <>\r\n                        {attributes.is_table_saved_to_db == false ? (\r\n                            <div class=\"create_table_input\">\r\n                                <div>\r\n                                    <div class=\"ui icon input\">\r\n                                        <input\r\n                                            required\r\n                                            type=\"text\"\r\n                                            name=\"table_name\"\r\n                                            placeholder=\"Table Name\"\r\n                                            value={attributes.init_table_name}\r\n                                            onChange={(e) => {\r\n                                                setAttributes({ init_table_name: e.target.value });\r\n                                            }}\r\n                                        />{\" \"}\r\n                                    </div>\r\n\r\n                                    <div class=\"ui icon input\">\r\n                                        <input\r\n                                            required\r\n                                            type=\"text\"\r\n                                            name=\"file_input\"\r\n                                            placeholder=\"Enter the google spreadsheet public url.\"\r\n                                            value={attributes.sheet_url}\r\n                                            ref={sheetUrlRef}\r\n                                            onChange={(e) => {\r\n                                                setAttributes({ sheet_url: e.target.value });\r\n                                            }}\r\n                                        />{\" \"}\r\n                                        <i class=\"file icon\"> </i>{\" \"}\r\n                                    </div>\r\n\r\n                                    <button\r\n                                        class=\"ui violet button\"\r\n                                        type=\"button\"\r\n                                        id=\"fetch_save_btn\"\r\n                                        onClick={(e) => {\r\n                                            fetch_data_by_url(attributes.sheet_url);\r\n                                        }}\r\n                                    >\r\n                                        {\" \"}\r\n                                        {attributes.btn_text}{\" \"}\r\n                                    </button>\r\n                                </div>\r\n                                {/* {gridError && (<p className='swptls-grid-not-supported-error'>On free plan tables can be created from the first sheet tab only. <span onClick={displayProPopup}>Get Pro</span> to create table from any tab of your Google SpreadSheet.</p>)} */}\r\n                            </div>\r\n                        ) : (\r\n                            <></>\r\n                        )}\r\n                        <div ref={spreadsheet_container} id=\"spreadsheet_container\" dangerouslySetInnerHTML={{ __html: attributes.innerHTML }}></div>{\" \"}\r\n                    </>\r\n                )\r\n            ) : (\r\n                <div class=\"block_initializer\">\r\n                    <button\r\n                        id=\"create_button\"\r\n                        class=\"positive ui button\"\r\n                        onClick={(e) => {\r\n                            setAttributes({ block_init: true });\r\n                            setAttributes({ initializer_button_action: \"create_new\" });\r\n                            setAttributes({ innerHTML: \"\" });\r\n                        }}\r\n                    >\r\n                        Create New &nbsp; <i class=\"plus icon\"> </i>{\" \"}\r\n                    </button>\r\n\r\n                    <button\r\n                        class=\"ui violet button\"\r\n                        type=\"button\"\r\n                        onClick={(e) => {\r\n                            setAttributes({ block_init: true });\r\n                            setAttributes({ initializer_button_action: \"choose_table\" });\r\n                            setAttributes({ show_choose_table: true });\r\n                            // document.querySelector(\".interface-pinned-items > button\").click();\r\n                        }}\r\n                    >\r\n                        Choose Table{\" \"}\r\n                    </button>\r\n                </div>\r\n            )}\r\n        </div>,\r\n    ];\r\n}\r\n\r\n// Inject the table style class if import style is not active\r\nfunction embedTableStyleClass(attributes) {\r\n    if (attributes.table_settings.importStyles) {\r\n        return \"default-style\";\r\n    } else {\r\n        return attributes.table_settings.tableStyle;\r\n    }\r\n}\r\n","import Block_Logo from \"./logo\";\r\nimport editFucntion from \"./editFucntion\";\r\n\r\nconst { registerBlockType } = wp.blocks;\r\n\r\nregisterBlockType(\"gswpts/google-sheets-to-wp-tables\", {\r\n    title: \"FlexTable\",\r\n    description:\r\n        \"Display Google Spreadsheet data to WordPress table in just a few clicks and keep the data always synced. Organize and display all your spreadsheet data in your WordPress quickly and effortlessly.\",\r\n    category: \"common\",\r\n    example: {},\r\n    icon: Block_Logo,\r\n    keywords: [\"spreadsheet\", \"google\", \"table\"],\r\n    attributes: {\r\n        sortcode_id: {\r\n            type: \"integer\",\r\n            default: null,\r\n        },\r\n\r\n        block_init: {\r\n            type: \"boolean\",\r\n            default: false,\r\n        },\r\n\r\n        initializer_button_action: {\r\n            type: \"string\",\r\n            default: \"\",\r\n        },\r\n\r\n        show_choose_table: {\r\n            type: \"boolean\",\r\n            default: false,\r\n        },\r\n\r\n        btn_text: {\r\n            type: \"string\",\r\n            default: \"Create\",\r\n        },\r\n\r\n        req_type: {\r\n            type: \"string\",\r\n            default: \"fetch\",\r\n        },\r\n\r\n        init_table_name: {\r\n            type: \"string\",\r\n            default: \"GSWPTS Table\",\r\n        },\r\n\r\n        sheet_url: {\r\n            type: \"string\",\r\n            default: \"\",\r\n        },\r\n\r\n        is_table_saved_to_db: {\r\n            type: \"boolean\",\r\n            default: false,\r\n        },\r\n\r\n        table_selection: {\r\n            type: \"string\",\r\n            default: \"no_selection\",\r\n        },\r\n\r\n        innerHTML: {\r\n            type: \"string\",\r\n            default: \"<h4>Choose table from block settings</h4>\",\r\n        },\r\n\r\n        saved_tables: {\r\n            type: \"object\",\r\n            default: gswpts_gutenberg_block.table_details,\r\n        },\r\n\r\n        table_name: {\r\n            type: \"string\",\r\n            default: \"\",\r\n        },\r\n\r\n        show_settings: {\r\n            type: \"boolean\",\r\n            default: false,\r\n        },\r\n\r\n        table_settings: {\r\n            type: \"object\",\r\n            default: {\r\n              \r\n                table_title: false,\r\n                show_description: false,\r\n                description_position: 'above',\r\n                table_description: '',\r\n\r\n                default_rows_per_page: 10,\r\n                show_info_block: false,\r\n                responsive_table: false,\r\n                show_x_entries: true,\r\n                swap_filter_inputs: false,\r\n                swap_bottom_options: false,\r\n                allow_sorting:false,\r\n                search_bar: true,\r\n                table_export: [],\r\n                vertical_scroll: null,\r\n                cell_format: \"expand\",\r\n                responsive_style: \"default_style\",\r\n                redirection_type: \"_blank\",\r\n                cursor_behavior: \"left_right\",\r\n                table_cache: false,\r\n                table_style: 'default-style',\r\n                merged_support: false,\r\n                isvertical: false,\r\n\r\n                //Column \r\n                hide_column: [],\r\n                hide_column_mobile: [],\r\n                hide_on_desktop_col:true,\r\n                hide_on_mobile_col:true,\r\n\r\n                // ROW \r\n                hide_rows: [],\r\n                hide_rows_mobile: [],\r\n                hide_on_desktop_rows:true,\r\n                hide_on_mobile_rows:true,\r\n\r\n                // Cells \r\n                hide_cell: [],\r\n                hide_cell_mobile: [],\r\n                hide_on_desktop_cell:true,\r\n                hide_on_mobile_cell:true,\r\n\r\n                import_styles: false,\r\n                table_styles: false,\r\n                table_img_support: false,\r\n                table_link_support: false,\r\n\r\n                import_styles_theme_colors: {\r\n                    'default-style': {\r\n                        headerBGColor: '#ffffff',\r\n                        headerTextColor: '#000000',\r\n                        bodyBGColor: '#ffffff',\r\n                        bodyTextColorCol_1: '#333333',\r\n                        bodyTextColorColRest: '#6B7280',\r\n                        borderColor: '#e0e5f6',\r\n                        paginationStyle: 'default_pagination',\r\n                        paginationAciveBtnColor: '#828282',\r\n                        pagination_center: false,\r\n                    },\r\n                    'style-4': {\r\n                        headerBGColor: '#000',\r\n                        headerTextColor: '#ffffff',\r\n                        bodyBGColor: '#000f',\r\n                        bodyTextColor: '#ffffff',\r\n                        hoverBGColor: '#504949',\r\n                        paginationStyle: 'simple_pagination',\r\n                        paginationAciveBtnColor: '#000000',\r\n                        pagination_center: true,\r\n                    },\r\n                    'style-6': {\r\n                        headerBGColor: '#E5F1FF',\r\n                        headerTextColor: '#0f0f0f',\r\n                        bodyTextColor: '#0f0f0f',\r\n                        bodyBGColorEven: '#EBF4FF',\r\n                        bodyBGColorOdd: '#ffffff',\r\n                        hoverBGColor: '#bdcfe4',\r\n                        paginationStyle: 'tailwind_pagination',\r\n                        paginationAciveBtnColor: '#2D74E7',\r\n                        pagination_center: false,\r\n                    },\r\n                    'style-2': {\r\n                        headerBGColor: '#36304a',\r\n                        headerTextColor: '#ffffff',\r\n                        bodyTextColor: '#0f0f0f',\r\n                        bodyBGColorEven: '#f5f5f5',\r\n                        bodyBGColorOdd: '#ffffff',\r\n                        hoverBGColor: '#d1d1d1',\r\n                        borderType: 'solid',\r\n                        borderRadius: '10px',\r\n                        paginationStyle: 'modern_pagination',\r\n                        paginationAciveBtnColor: '#261C3B',\r\n                        pagination_center: false,\r\n                    },\r\n                    'style-3': {\r\n                        headerBGColor: '#6c7ae0',\r\n                        headerTextColor: '#ffffff',\r\n                        bodyTextColor: '#0f0f0f',\r\n                        bodyBGColorEven: '#f8f6ff',\r\n                        bodyBGColorOdd: '#ffffff',\r\n                        hoverBGColor: '#EDE8FC',\r\n                        borderColor: '#fafafa',\r\n                        borderType: 'solid',\r\n                        borderRadius: '10px',\r\n                        paginationStyle: 'outlined_pagination',\r\n                        paginationAciveBtnColor: '#5C51E0',\r\n                        pagination_center: false,\r\n                    },\r\n                    'style-5': {\r\n                        headerBGColor: '#F2F2F2',\r\n                        headerTextColor: '#333333',\r\n                        bodyBGColor: '#ffffff',\r\n                        bodyTextColor: '#0f0f0f',\r\n                        hoverBGColor: '#bdcfe4',\r\n                        borderColor: '#e4e1e1',\r\n                        borderType: 'solid',\r\n                        borderRadius: '10px',\r\n                        paginationStyle: 'tailwind_pagination',\r\n                        paginationAciveBtnColor: '#2F80ED',\r\n                        pagination_center: false,\r\n                    },\r\n                    'style-8': {\r\n                        headerBGColor: '#E0E7FF',\r\n                        headerTextColor: '#312E81',\r\n                        bodyBGColor: '#ffffff',\r\n                        bodyTextColor: '#333333',\r\n                        bodyTextColorCol_1: '#333333',\r\n                        bodyTextColorColRest: '#6B7280',\r\n                        hoverBGColor: '#e4e9f8',\r\n                        borderColor: '#e0e5f6',\r\n                        borderType: 'solid',\r\n                        borderRadius: '10px',\r\n                        paginationStyle: 'tailwind_pagination',\r\n                        paginationAciveBtnColor: '#5C51E0',\r\n                        pagination_center: false,\r\n                    },\r\n                    'style-1': {\r\n                        headerBGColor: '#6807f9',\r\n                        headerTextColor: '#ffffff',\r\n                        bodyBGColorEven: '#ffffff',\r\n                        bodyBGColorOdd: '#E9E7FF',\r\n                        bodyTextColor: '#000',\r\n                        borderColor: '#e0e5f6',\r\n                        hoverBGColor: '#EDE8FC',\r\n                        borderType: 'solid',\r\n                        borderRadius: '10px',\r\n                        paginationStyle: 'outlined_pagination',\r\n                        paginationAciveBtnColor: '#5C51E0',\r\n                        pagination_center: false,\r\n                    },\r\n                    'style-7': {\r\n                        headerBGColor: '#8880F8',\r\n                        headerTextColor: '#ffffff',\r\n                        bodyBGColor: '#34344C',\r\n                        bodyTextColor: '#ffffff',\r\n                        hoverBGColor: '#7e78d3',\r\n                        borderType: 'solid',\r\n                        borderRadius: '10px',\r\n                        paginationStyle: 'simple_pagination',\r\n                        paginationAciveBtnColor: '#34344C',\r\n                        pagination_center: true,\r\n                    },\r\n                },\r\n                \r\n            },\r\n        },\r\n\r\n        // Column Header values of table that will set on the run\r\n        tableColumns: {\r\n            type: \"object\",\r\n            default: null,\r\n        },\r\n    },\r\n\r\n    edit: editFucntion,\r\n\r\n    save: ({ attributes }) => {\r\n        const { sortcode_id } = attributes;\r\n        return <>[gswpts_table id = {sortcode_id}] </>;\r\n    },\r\n});\r\n","import Logo from \"../../../../public/images/icon-guten.svg\";\r\n\r\nconst Block_Logo = () => (\r\n    <div>\r\n        <Logo />\r\n    </div>\r\n);\r\n\r\nexport default Block_Logo;\r\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","React","_path","_path2","_path3","_ellipse","_path4","_path5","_extends","assign","target","i","arguments","length","source","apply","this","props","width","height","viewBox","fill","xmlns","fillRule","clipRule","cx","cy","rx","ry","$","jQuery","noConflict","callAlert","title","description","type","time","pos","suiAlert","position","options","icon","close_anim","alert_size","window","alerts_class","append","_alert","prepend","transition","on","closest","animation","onComplete","remove","timer","alertHide","setTimeout","duration","mouseenter","clearTimeout","mouseleave","wp","element","useEffect","useRef","InspectorControls","useState","blockEditor","components","Panel","PanelBody","SelectControl","PanelRow","ToggleControl","embedTableStyleClass","attributes","table_settings","importStyles","tableStyle","registerBlockType","blocks","category","example","keywords","sortcode_id","default","block_init","initializer_button_action","show_choose_table","btn_text","req_type","init_table_name","sheet_url","is_table_saved_to_db","table_selection","innerHTML","saved_tables","gswpts_gutenberg_block","table_details","table_name","show_settings","table_title","show_description","description_position","table_description","default_rows_per_page","show_info_block","responsive_table","show_x_entries","swap_filter_inputs","swap_bottom_options","allow_sorting","search_bar","table_export","vertical_scroll","cell_format","responsive_style","redirection_type","cursor_behavior","table_cache","table_style","merged_support","isvertical","hide_column","hide_column_mobile","hide_on_desktop_col","hide_on_mobile_col","hide_rows","hide_rows_mobile","hide_on_desktop_rows","hide_on_mobile_rows","hide_cell","hide_cell_mobile","hide_on_desktop_cell","hide_on_mobile_cell","import_styles","table_styles","table_img_support","table_link_support","import_styles_theme_colors","headerBGColor","headerTextColor","bodyBGColor","bodyTextColorCol_1","bodyTextColorColRest","borderColor","paginationStyle","paginationAciveBtnColor","pagination_center","bodyTextColor","hoverBGColor","bodyBGColorEven","bodyBGColorOdd","borderType","borderRadius","tableColumns","edit","setAttributes","fetch_data_by_id","spreadsheet_container","sheetUrlRef","id","parseInt","ajax","url","admin_ajax","data","action","nonce","fetch_nonce","beforeSend","loader","success","res","response_type","output","message","error","err","complete","JSON","parse","responseText","name","dom","defaultRowsPerPage","allowSorting","verticalScroll","cellFormat","redirectionType","hideColumn","ajax_table_settings","prevSettingObj","isProPluginActive","formatStyle","tableID","tableCells","current","each","cell","removeClass","addClass","changeCellFormat","links","link","attr","changeRedirectionType","DataTable","table_object","show_title","showInfoBlock","showXEntries","swapFilterInputs","swapBottomOptions","searchBar","tableCache","table_id","filter_state","selector","swap_filter_state","css","select_options","pageLength","ordering","order","responsive","lengthMenu","lengthChange","destroy","scrollX","scrollY","screen","desktopValues","columnDefs","hideColumnByScreen","mobileValues","arrayValues","targets","arr","map","val","visible","searchable","isProActive","style","header","initialOpen","label","value","onChange","forEach","table","push","class","marginRight","dangerouslySetInnerHTML","__html","required","placeholder","e","ref","onClick","settings","stringify","context","default_settings","handle","save"],"sourceRoot":""}